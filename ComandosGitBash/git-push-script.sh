#!/bin/bash
#===================================================================================
# Script: git-push-script.sh
# 
# Descri√ß√£o:
#   Script para automatizar o processo de push no Git com verifica√ß√µes de seguran√ßa,
#   valida√ß√µes e merge autom√°tico com a branch produtiva.
#
# Uso:
#   ./git-push-script.sh <caminho_do_projeto>
#
# Exemplo de execu√ß√£o:
#   ./git-push-script.sh /caminho/do/projeto
#
# Funcionalidades:
#   - Verifica se o diret√≥rio e o reposit√≥rio Git s√£o v√°lidos
#   - Realiza pull autom√°tico da branch produtiva
#   - Realiza merge autom√°tico com a branch produtiva
#   - Push autom√°tico se n√£o houver conflitos
#   - Feedback amig√°vel em caso de erros
#
# Vers√£o: 1.1
#===================================================================================

# Define a branch produtiva
productive_branch="main"

# Recebe o caminho do projeto como vari√°vel
project_path=$1

# Fun√ß√£o para exibir mensagens de erro de forma amig√°vel
error_exit() {
    echo "‚ùå Ops! Algo deu errado..."
    echo "üîç Detalhes: $1"
    echo "üí° Sugest√£o: Verifique o erro acima e tente novamente"
    exit 1
}

# Fun√ß√£o para verificar se o Git est√° instalado
check_git_version() {
    if ! command -v git >/dev/null 2>&1; then
        error_exit "Parece que o Git n√£o est√° instalado no seu sistema"
    fi
}

# Verifica se foi fornecido o caminho do projeto
if [ -z "$project_path" ]; then
    error_exit "Por favor, informe o caminho do projeto"
fi

# Verifica se o diret√≥rio existe
if [ ! -d "$project_path" ]; then
    error_exit "N√£o encontrei o diret√≥rio: $project_path"
fi

# Verifica se Git est√° instalado
check_git_version

# Entra no diret√≥rio do projeto
cd "$project_path" || error_exit "N√£o consegui acessar o diret√≥rio do projeto"

# Verifica se √© um reposit√≥rio git
if [ ! -d ".git" ]; then
    error_exit "Este diret√≥rio n√£o parece ser um reposit√≥rio Git"
fi

echo "üöÄ Trabalhando no projeto: $project_path"

# Guarda a branch atual
current_branch=$(git rev-parse --abbrev-ref HEAD)
echo "üìÇ Branch atual: $current_branch"

# Verifica status do reposit√≥rio
echo -e "\nüìã Verificando status do reposit√≥rio..."
if [ -n "$(git status --porcelain)" ]; then
    error_exit "Existem altera√ß√µes n√£o commitadas. Por favor, fa√ßa commit ou stash das altera√ß√µes primeiro"
fi

echo "üîÑ Iniciando processo de atualiza√ß√£o..."

# Tenta mudar para a branch produtiva
echo "üìç Mudando para branch $productive_branch..."
if ! git checkout $productive_branch; then
    error_exit "N√£o foi poss√≠vel mudar para a branch $productive_branch"
fi

# Atualiza a branch produtiva
echo "‚¨áÔ∏è Atualizando branch $productive_branch..."
if ! git pull origin $productive_branch; then
    error_exit "Erro ao atualizar a branch $productive_branch"
fi

# Volta para a branch original
echo "üìç Voltando para branch $current_branch..."
if ! git checkout $current_branch; then
    error_exit "N√£o foi poss√≠vel voltar para a branch $current_branch"
fi

# Atualiza a branch atual
echo "‚¨áÔ∏è Atualizando branch $current_branch..."
if ! git pull origin $current_branch; then
    error_exit "Erro ao atualizar a branch $current_branch"
fi

# Tenta realizar o merge
echo "üîÑ Realizando merge com $productive_branch..."
if ! git merge $productive_branch --no-commit; then
    echo "‚ùå Conflitos detectados durante o merge!"
    echo "üîß Por favor:"
    echo "1. Resolva os conflitos manualmente"
    echo "2. Fa√ßa commit das altera√ß√µes"
    echo "3. Execute o script novamente"
    git merge --abort
    exit 1
fi

# Verifica se h√° altera√ß√µes ap√≥s o merge
if [ -n "$(git diff --cached)" ]; then
    # Finaliza o merge com commit
    if ! git commit -m "Merge com $productive_branch"; then
        error_exit "Erro ao finalizar o merge"
    fi
fi

# Realiza o push
echo "‚¨ÜÔ∏è Realizando push das altera√ß√µes..."
if ! git push origin $current_branch; then
    error_exit "Erro ao realizar push para origin/$current_branch"
fi

echo "‚ú® Processo conclu√≠do com sucesso!"
echo "üìã Resumo:"
echo "- Branch atual: $current_branch"
echo "- Merge realizado com: $productive_branch"
echo "- Push realizado para: origin/$current_branch"